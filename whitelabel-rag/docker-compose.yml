version: '3.8'

services:
  whitelabel-rag:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: whitelabel-rag-app
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:?GEMINI_API_KEY environment variable is required}
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-}
      - CHROMA_DB_PATH=/app/chromadb_data
      - UPLOAD_FOLDER=/app/uploads
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WORKERS=${WORKERS:-4}
      - TIMEOUT=${TIMEOUT:-120}
      - KEEPALIVE=${KEEPALIVE:-2}
    volumes:
      - uploads_data:/app/uploads
      - chromadb_data:/app/chromadb_data
      - logs_data:/app/logs
    networks:
      - whitelabel-rag-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whitelabel-rag.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.whitelabel-rag.loadbalancer.server.port=${PORT:-5000}"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.routers.whitelabel-rag.middlewares=cors@docker"

  redis:
    image: redis:7-alpine
    container_name: whitelabel-rag-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - whitelabel-rag-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: whitelabel-rag-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - whitelabel-rag-network
    restart: unless-stopped
    depends_on:
      - whitelabel-rag
    profiles:
      - nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  whitelabel-rag-network:
    driver: bridge

volumes:
  uploads_data:
  chromadb_data:
  logs_data:
  redis_data: